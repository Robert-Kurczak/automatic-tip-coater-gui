/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ROTATIONDIRECTIONSCREENVIEWBASE_HPP
#define ROTATIONDIRECTIONSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/rotationdirectionscreen_screen/RotationDirectionScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/SettingsFooter.hpp>
#include <gui/containers/RotationDirectionSelector.hpp>
#include <gui/containers/RotationDirectionSettingsButtons.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class RotationDirectionScreenViewBase : public touchgfx::View<RotationDirectionScreenPresenter>
{
public:
    RotationDirectionScreenViewBase();
    virtual ~RotationDirectionScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void clockwiseButtonPressed()
    {
        // Override and implement this function in RotationDirectionScreen
    }
    virtual void counterClockwiseButtonPressed()
    {
        // Override and implement this function in RotationDirectionScreen
    }
    virtual void saveButtonPressed()
    {
        // Override and implement this function in RotationDirectionScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    SettingsFooter settingsFooter;
    RotationDirectionSelector rotationDirectionSelector;
    RotationDirectionSettingsButtons rotationDirectionSettingsButtons;
    touchgfx::Box directionButtonUnderline;
    touchgfx::TextArea submenuName;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RotationDirectionScreenViewBase> rotationDirectionSettingsButtonsSpeedButtonPressedCallback;
    touchgfx::Callback<RotationDirectionScreenViewBase> rotationDirectionSettingsButtonsRotationTimeButtonPressedCallback;
    touchgfx::Callback<RotationDirectionScreenViewBase> rotationDirectionSelectorClockwiseButtonPressedCallback;
    touchgfx::Callback<RotationDirectionScreenViewBase> settingsFooterSaveButtonPressedCallback;

    /*
     * Callback Handler Declarations
     */
    void rotationDirectionSettingsButtonsSpeedButtonPressedCallbackHandler();
    void rotationDirectionSettingsButtonsRotationTimeButtonPressedCallbackHandler();
    void rotationDirectionSelectorClockwiseButtonPressedCallbackHandler();
    void settingsFooterSaveButtonPressedCallbackHandler();

};

#endif // ROTATIONDIRECTIONSCREENVIEWBASE_HPP
