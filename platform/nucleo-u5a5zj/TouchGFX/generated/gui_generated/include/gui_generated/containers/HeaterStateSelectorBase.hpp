/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HEATERSTATESELECTORBASE_HPP
#define HEATERSTATESELECTORBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class HeaterStateSelectorBase : public touchgfx::Container
{
public:
    HeaterStateSelectorBase();
    virtual ~HeaterStateSelectorBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setStateOnButtonPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->StateOnButtonPressedCallback = &callback;
    }
    void setStateOffButtonPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->StateOffButtonPressedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitStateOnButtonPressedCallback()
    {
        if (StateOnButtonPressedCallback && StateOnButtonPressedCallback->isValid())
        {
            this->StateOnButtonPressedCallback->execute();
        }
    }
    virtual void emitStateOffButtonPressedCallback()
    {
        if (StateOffButtonPressedCallback && StateOffButtonPressedCallback->isValid())
        {
            this->StateOffButtonPressedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Container stateButtonContainer;
    touchgfx::Box stateButtonShadow;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  stateOnButton;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  stateOffButton;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* StateOnButtonPressedCallback;
    touchgfx::GenericCallback<>* StateOffButtonPressedCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<HeaterStateSelectorBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // HEATERSTATESELECTORBASE_HPP
