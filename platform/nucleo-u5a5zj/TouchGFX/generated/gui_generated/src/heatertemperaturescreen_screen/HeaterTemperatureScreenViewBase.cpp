/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/heatertemperaturescreen_screen/HeaterTemperatureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HeaterTemperatureScreenViewBase::HeaterTemperatureScreenViewBase() :
    temperatureSelectorIncreaseButtonPressedCallback(this, &HeaterTemperatureScreenViewBase::temperatureSelectorIncreaseButtonPressedCallbackHandler),
    temperatureSelectorDecreaseButtonPressedCallback(this, &HeaterTemperatureScreenViewBase::temperatureSelectorDecreaseButtonPressedCallbackHandler),
    settingsFooterSaveButtonPressedCallback(this, &HeaterTemperatureScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler),
    heaterTemperatureSettingsButtonsStateButtonPressedCallback(this, &HeaterTemperatureScreenViewBase::heaterTemperatureSettingsButtonsStateButtonPressedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 480, 800);
    background.setColor(touchgfx::Color::getColorFromRGB(30, 30, 46));
    add(background);

    settingsFooter.setXY(0, 675);
    settingsFooter.setSaveButtonPressedCallback(settingsFooterSaveButtonPressedCallback);
    add(settingsFooter);

    temperatureSelector.setXY(0, 0);
    temperatureSelector.setIncreaseButtonPressedCallback(temperatureSelectorIncreaseButtonPressedCallback);
    temperatureSelector.setDecreaseButtonPressedCallback(temperatureSelectorDecreaseButtonPressedCallback);
    add(temperatureSelector);

    displayedValueUnderline.setPosition(55, 435, 370, 5);
    displayedValueUnderline.setColor(touchgfx::Color::getColorFromRGB(243, 139, 168));
    add(displayedValueUnderline);

    heaterTemperatureSettingsButtons.setXY(0, 0);
    heaterTemperatureSettingsButtons.setStateButtonPressedCallback(heaterTemperatureSettingsButtonsStateButtonPressedCallback);
    add(heaterTemperatureSettingsButtons);

    units.setPosition(240, 363, 173, 35);
    units.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    units.setLinespacing(1);
    units.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QCS6));
    add(units);

    submenuName.setXY(198, 25);
    submenuName.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    submenuName.setLinespacing(0);
    submenuName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZUKI));
    add(submenuName);
}

HeaterTemperatureScreenViewBase::~HeaterTemperatureScreenViewBase()
{

}

void HeaterTemperatureScreenViewBase::setupScreen()
{
    settingsFooter.initialize();
    temperatureSelector.initialize();
    heaterTemperatureSettingsButtons.initialize();
}

void HeaterTemperatureScreenViewBase::temperatureSelectorIncreaseButtonPressedCallbackHandler()
{
    //IncreaseButtonPressed
    //When temperatureSelector increaseButtonPressed call virtual function
    //Call increaseButtonPressed
    increaseButtonPressed();
}

void HeaterTemperatureScreenViewBase::temperatureSelectorDecreaseButtonPressedCallbackHandler()
{
    //DecreaseButtonPressed
    //When temperatureSelector decreaseButtonPressed call virtual function
    //Call decreaseButtonPressed
    decreaseButtonPressed();
}

void HeaterTemperatureScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler()
{
    //SaveButtonPressed
    //When settingsFooter saveButtonPressed call virtual function
    //Call saveButtonPressed
    saveButtonPressed();
}

void HeaterTemperatureScreenViewBase::heaterTemperatureSettingsButtonsStateButtonPressedCallbackHandler()
{
    //GoToHeaterState
    //When heaterTemperatureSettingsButtons stateButtonPressed change screen to HeaterStateScreen
    //Go to HeaterStateScreen with no screen transition
    application().gotoHeaterStateScreenScreenNoTransition();
}
