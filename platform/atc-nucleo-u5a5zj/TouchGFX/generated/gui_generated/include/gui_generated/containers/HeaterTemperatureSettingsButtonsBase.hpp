/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HEATERTEMPERATURESETTINGSBUTTONSBASE_HPP
#define HEATERTEMPERATURESETTINGSBUTTONSBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class HeaterTemperatureSettingsButtonsBase : public touchgfx::Container
{
public:
    HeaterTemperatureSettingsButtonsBase();
    virtual ~HeaterTemperatureSettingsButtonsBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTemperatureButtonPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->temperatureButtonPressedCallback = &callback;
    }
    void setStateButtonPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->stateButtonPressedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTemperatureButtonPressedCallback()
    {
        if (temperatureButtonPressedCallback && temperatureButtonPressedCallback->isValid())
        {
            this->temperatureButtonPressedCallback->execute();
        }
    }
    virtual void emitStateButtonPressedCallback()
    {
        if (stateButtonPressedCallback && stateButtonPressedCallback->isValid())
        {
            this->stateButtonPressedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Container buttons;
    touchgfx::Container stateButtonContainer;
    touchgfx::Box stateButtonShadow;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  stateButton;
    touchgfx::Box stateButtonUnderline;
    touchgfx::Container temperatureButtonContainer;
    touchgfx::Box temperatureButtonShadow;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  temperatureButton;
    touchgfx::Box temperatureButtonUnderline;
    touchgfx::Container headerContainer;
    touchgfx::Box headerShadow;
    touchgfx::Box header;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* temperatureButtonPressedCallback;
    touchgfx::GenericCallback<>* stateButtonPressedCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<HeaterTemperatureSettingsButtonsBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // HEATERTEMPERATURESETTINGSBUTTONSBASE_HPP
