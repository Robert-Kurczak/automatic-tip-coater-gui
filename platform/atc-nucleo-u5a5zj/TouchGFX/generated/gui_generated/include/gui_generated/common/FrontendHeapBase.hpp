/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <touchgfx/transitions/WipeTransition.hpp>

#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <gui/startscreen_screen/StartScreenView.hpp>
#include <gui/startscreen_screen/StartScreenPresenter.hpp>
#include <gui/calibratescreen_screen/CalibrateScreenView.hpp>
#include <gui/calibratescreen_screen/CalibrateScreenPresenter.hpp>
#include <gui/settingsscreen_screen/SettingsScreenView.hpp>
#include <gui/settingsscreen_screen/SettingsScreenPresenter.hpp>
#include <gui/xaxisstartscreen_screen/XAxisStartScreenView.hpp>
#include <gui/xaxisstartscreen_screen/XAxisStartScreenPresenter.hpp>
#include <gui/xaxisendscreen_screen/XAxisEndScreenView.hpp>
#include <gui/xaxisendscreen_screen/XAxisEndScreenPresenter.hpp>
#include <gui/xaxisspeedscreen_screen/XAxisSpeedScreenView.hpp>
#include <gui/xaxisspeedscreen_screen/XAxisSpeedScreenPresenter.hpp>
#include <gui/yaxisstartscreen_screen/YAxisStartScreenView.hpp>
#include <gui/yaxisstartscreen_screen/YAxisStartScreenPresenter.hpp>
#include <gui/yaxisendscreen_screen/YAxisEndScreenView.hpp>
#include <gui/yaxisendscreen_screen/YAxisEndScreenPresenter.hpp>
#include <gui/yaxisspeedscreen_screen/YAxisSpeedScreenView.hpp>
#include <gui/yaxisspeedscreen_screen/YAxisSpeedScreenPresenter.hpp>
#include <gui/zaxisstartscreen_screen/ZAxisStartScreenView.hpp>
#include <gui/zaxisstartscreen_screen/ZAxisStartScreenPresenter.hpp>
#include <gui/zaxisendscreen_screen/ZAxisEndScreenView.hpp>
#include <gui/zaxisendscreen_screen/ZAxisEndScreenPresenter.hpp>
#include <gui/zaxisspeedscreen_screen/ZAxisSpeedScreenView.hpp>
#include <gui/zaxisspeedscreen_screen/ZAxisSpeedScreenPresenter.hpp>
#include <gui/rotationspeedscreen_screen/RotationSpeedScreenView.hpp>
#include <gui/rotationspeedscreen_screen/RotationSpeedScreenPresenter.hpp>
#include <gui/rotationdirectionscreen_screen/RotationDirectionScreenView.hpp>
#include <gui/rotationdirectionscreen_screen/RotationDirectionScreenPresenter.hpp>
#include <gui/rotationtimescreen_screen/RotationTimeScreenView.hpp>
#include <gui/rotationtimescreen_screen/RotationTimeScreenPresenter.hpp>
#include <gui/heatertemperaturescreen_screen/HeaterTemperatureScreenView.hpp>
#include <gui/heatertemperaturescreen_screen/HeaterTemperatureScreenPresenter.hpp>
#include <gui/heaterstatescreen_screen/HeaterStateScreenView.hpp>
#include <gui/heaterstatescreen_screen/HeaterStateScreenPresenter.hpp>
#include <gui/testsscreen_screen/TestsScreenView.hpp>
#include <gui/testsscreen_screen/TestsScreenPresenter.hpp>
#include <gui/xaxistestsscreen_screen/XAxisTestsScreenView.hpp>
#include <gui/xaxistestsscreen_screen/XAxisTestsScreenPresenter.hpp>
#include <gui/yaxistestsscreen_screen/YAxisTestsScreenView.hpp>
#include <gui/yaxistestsscreen_screen/YAxisTestsScreenPresenter.hpp>
#include <gui/zaxistestsscreen_screen/ZAxisTestsScreenView.hpp>
#include <gui/zaxistestsscreen_screen/ZAxisTestsScreenPresenter.hpp>
#include <gui/rotationtestsscreen_screen/RotationTestsScreenView.hpp>
#include <gui/rotationtestsscreen_screen/RotationTestsScreenPresenter.hpp>
#include <gui/heatertestsscreen_screen/HeaterTestsScreenView.hpp>
#include <gui/heatertestsscreen_screen/HeaterTestsScreenPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< MainScreenView,
            touchgfx::meta::TypeList< StartScreenView,
            touchgfx::meta::TypeList< CalibrateScreenView,
            touchgfx::meta::TypeList< SettingsScreenView,
            touchgfx::meta::TypeList< XAxisStartScreenView,
            touchgfx::meta::TypeList< XAxisEndScreenView,
            touchgfx::meta::TypeList< XAxisSpeedScreenView,
            touchgfx::meta::TypeList< YAxisStartScreenView,
            touchgfx::meta::TypeList< YAxisEndScreenView,
            touchgfx::meta::TypeList< YAxisSpeedScreenView,
            touchgfx::meta::TypeList< ZAxisStartScreenView,
            touchgfx::meta::TypeList< ZAxisEndScreenView,
            touchgfx::meta::TypeList< ZAxisSpeedScreenView,
            touchgfx::meta::TypeList< RotationSpeedScreenView,
            touchgfx::meta::TypeList< RotationDirectionScreenView,
            touchgfx::meta::TypeList< RotationTimeScreenView,
            touchgfx::meta::TypeList< HeaterTemperatureScreenView,
            touchgfx::meta::TypeList< HeaterStateScreenView,
            touchgfx::meta::TypeList< TestsScreenView,
            touchgfx::meta::TypeList< XAxisTestsScreenView,
            touchgfx::meta::TypeList< YAxisTestsScreenView,
            touchgfx::meta::TypeList< ZAxisTestsScreenView,
            touchgfx::meta::TypeList< RotationTestsScreenView,
            touchgfx::meta::TypeList< HeaterTestsScreenView,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< MainScreenPresenter,
            touchgfx::meta::TypeList< StartScreenPresenter,
            touchgfx::meta::TypeList< CalibrateScreenPresenter,
            touchgfx::meta::TypeList< SettingsScreenPresenter,
            touchgfx::meta::TypeList< XAxisStartScreenPresenter,
            touchgfx::meta::TypeList< XAxisEndScreenPresenter,
            touchgfx::meta::TypeList< XAxisSpeedScreenPresenter,
            touchgfx::meta::TypeList< YAxisStartScreenPresenter,
            touchgfx::meta::TypeList< YAxisEndScreenPresenter,
            touchgfx::meta::TypeList< YAxisSpeedScreenPresenter,
            touchgfx::meta::TypeList< ZAxisStartScreenPresenter,
            touchgfx::meta::TypeList< ZAxisEndScreenPresenter,
            touchgfx::meta::TypeList< ZAxisSpeedScreenPresenter,
            touchgfx::meta::TypeList< RotationSpeedScreenPresenter,
            touchgfx::meta::TypeList< RotationDirectionScreenPresenter,
            touchgfx::meta::TypeList< RotationTimeScreenPresenter,
            touchgfx::meta::TypeList< HeaterTemperatureScreenPresenter,
            touchgfx::meta::TypeList< HeaterStateScreenPresenter,
            touchgfx::meta::TypeList< TestsScreenPresenter,
            touchgfx::meta::TypeList< XAxisTestsScreenPresenter,
            touchgfx::meta::TypeList< YAxisTestsScreenPresenter,
            touchgfx::meta::TypeList< ZAxisTestsScreenPresenter,
            touchgfx::meta::TypeList< RotationTestsScreenPresenter,
            touchgfx::meta::TypeList< HeaterTestsScreenPresenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::TypeList< WipeTransition<EAST>,
            touchgfx::meta::TypeList< WipeTransition<WEST>,
            touchgfx::meta::Nil > >
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
