/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rotationspeedscreen_screen/RotationSpeedScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

RotationSpeedScreenViewBase::RotationSpeedScreenViewBase() :
    speedSelectorIncreaseButtonPressedCallback(this, &RotationSpeedScreenViewBase::speedSelectorIncreaseButtonPressedCallbackHandler),
    speedSelectorDecreaseButtonPressedCallback(this, &RotationSpeedScreenViewBase::speedSelectorDecreaseButtonPressedCallbackHandler),
    settingsFooterSaveButtonPressedCallback(this, &RotationSpeedScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler),
    rotationSpeedSettingsButtonsDirectionButtonPressedCallback(this, &RotationSpeedScreenViewBase::rotationSpeedSettingsButtonsDirectionButtonPressedCallbackHandler),
    rotationSpeedSettingsButtonsRotationTimeButtonPressedCallback(this, &RotationSpeedScreenViewBase::rotationSpeedSettingsButtonsRotationTimeButtonPressedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 480, 800);
    background.setColor(touchgfx::Color::getColorFromRGB(30, 30, 46));
    add(background);

    settingsFooter.setXY(0, 675);
    settingsFooter.setSaveButtonPressedCallback(settingsFooterSaveButtonPressedCallback);
    add(settingsFooter);

    speedSelector.setXY(0, 0);
    speedSelector.setIncreaseButtonPressedCallback(speedSelectorIncreaseButtonPressedCallback);
    speedSelector.setDecreaseButtonPressedCallback(speedSelectorDecreaseButtonPressedCallback);
    add(speedSelector);

    rotationSpeedSettingsButtons.setXY(0, 0);
    rotationSpeedSettingsButtons.setDirectionButtonPressedCallback(rotationSpeedSettingsButtonsDirectionButtonPressedCallback);
    rotationSpeedSettingsButtons.setRotationTimeButtonPressedCallback(rotationSpeedSettingsButtonsRotationTimeButtonPressedCallback);
    add(rotationSpeedSettingsButtons);

    displayedValueUnderline.setPosition(55, 435, 370, 5);
    displayedValueUnderline.setColor(touchgfx::Color::getColorFromRGB(243, 139, 168));
    add(displayedValueUnderline);

    units.setPosition(240, 363, 173, 35);
    units.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    units.setLinespacing(1);
    units.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1440));
    add(units);

    submenuName.setXY(188, 25);
    submenuName.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    submenuName.setLinespacing(0);
    submenuName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4HL2));
    add(submenuName);
}

RotationSpeedScreenViewBase::~RotationSpeedScreenViewBase()
{

}

void RotationSpeedScreenViewBase::setupScreen()
{
    settingsFooter.initialize();
    speedSelector.initialize();
    rotationSpeedSettingsButtons.initialize();
}

void RotationSpeedScreenViewBase::speedSelectorIncreaseButtonPressedCallbackHandler()
{
    //IncreaseButtonPressed
    //When speedSelector increaseButtonPressed call virtual function
    //Call increaseButtonPressed
    increaseButtonPressed();
}

void RotationSpeedScreenViewBase::speedSelectorDecreaseButtonPressedCallbackHandler()
{
    //DecreaseButtonPressed
    //When speedSelector decreaseButtonPressed call virtual function
    //Call decreaseButtonPressed
    decreaseButtonPressed();
}

void RotationSpeedScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler()
{
    //SaveButtonPressed
    //When settingsFooter saveButtonPressed call virtual function
    //Call saveButtonPressed
    saveButtonPressed();
}

void RotationSpeedScreenViewBase::rotationSpeedSettingsButtonsDirectionButtonPressedCallbackHandler()
{
    //GoToRotationDirection
    //When rotationSpeedSettingsButtons directionButtonPressed change screen to RotationDirectionScreen
    //Go to RotationDirectionScreen with no screen transition
    application().gotoRotationDirectionScreenScreenNoTransition();
}

void RotationSpeedScreenViewBase::rotationSpeedSettingsButtonsRotationTimeButtonPressedCallbackHandler()
{
    //GoToRotationTime
    //When rotationSpeedSettingsButtons rotationTimeButtonPressed change screen to RotationTimeScreen
    //Go to RotationTimeScreen with no screen transition
    application().gotoRotationTimeScreenScreenNoTransition();
}
