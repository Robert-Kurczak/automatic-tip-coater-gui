/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/RotationTimeSettingsButtonsBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

RotationTimeSettingsButtonsBase::RotationTimeSettingsButtonsBase() :
    speedButtonPressedCallback(0),
    directionButtonPressedCallback(0),
    rotationTimeButtonPressedCallback(0),
    flexButtonCallback(this, &RotationTimeSettingsButtonsBase::flexButtonCallbackHandler)
{
    setWidth(480);
    setHeight(245);
    buttons.setPosition(0, 80, 480, 165);
    rotationTimeButtonContainer.setPosition(324, 0, 157, 165);
    rotationTimeButtonShadow.setPosition(0, 160, 157, 5);
    rotationTimeButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    rotationTimeButtonShadow.setAlpha(50);
    rotationTimeButtonContainer.add(rotationTimeButtonShadow);

    rotationTimeButton.setBoxWithBorderPosition(0, 0, 157, 160);
    rotationTimeButton.setBorderSize(0);
    rotationTimeButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    rotationTimeButton.setText(TypedText(T___SINGLEUSE_YRLG));
    rotationTimeButton.setTextPosition(0, 90, 157, 160);
    rotationTimeButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    rotationTimeButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_TIMER_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_TIMER_60_60_E8F6FB_SVG_ID));
    rotationTimeButton.setIconXY(50, 20);
    rotationTimeButton.setAction(flexButtonCallback);
    rotationTimeButton.setPosition(0, 0, 157, 160);
    rotationTimeButtonContainer.add(rotationTimeButton);

    rotationTimeButtonUnderline.setPosition(0, 155, 157, 5);
    rotationTimeButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(166, 227, 161));
    rotationTimeButtonContainer.add(rotationTimeButtonUnderline);

    buttons.add(rotationTimeButtonContainer);

    directionButtonContainer.setPosition(162, 0, 162, 125);
    directionButtonShadow.setPosition(0, 0, 162, 125);
    directionButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    directionButtonShadow.setAlpha(50);
    directionButtonContainer.add(directionButtonShadow);

    directionButton.setBoxWithBorderPosition(0, 0, 157, 120);
    directionButton.setBorderSize(0);
    directionButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    directionButton.setText(TypedText(T___SINGLEUSE_U75O));
    directionButton.setTextPosition(0, 45, 157, 120);
    directionButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    directionButton.setAction(flexButtonCallback);
    directionButton.setPosition(0, 0, 157, 120);
    directionButtonContainer.add(directionButton);

    directionButtonUnderline.setPosition(0, 115, 157, 5);
    directionButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(250, 179, 135));
    directionButtonContainer.add(directionButtonUnderline);

    buttons.add(directionButtonContainer);

    speedButtonContainer.setPosition(0, 0, 162, 125);
    speedButtonShadow.setPosition(0, 0, 162, 125);
    speedButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    speedButtonShadow.setAlpha(50);
    speedButtonContainer.add(speedButtonShadow);

    speedButton.setBoxWithBorderPosition(0, 0, 157, 120);
    speedButton.setBorderSize(0);
    speedButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    speedButton.setText(TypedText(T___SINGLEUSE_G9WJ));
    speedButton.setTextPosition(0, 45, 157, 120);
    speedButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    speedButton.setAction(flexButtonCallback);
    speedButton.setPosition(0, 0, 157, 120);
    speedButtonContainer.add(speedButton);

    speedButtonUnderline.setPosition(0, 115, 157, 5);
    speedButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(243, 139, 168));
    speedButtonContainer.add(speedButtonUnderline);

    buttons.add(speedButtonContainer);

    add(buttons);

    headerContainer.setPosition(0, 0, 480, 85);
    headerShadow.setPosition(0, 80, 480, 5);
    headerShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    headerShadow.setAlpha(50);
    headerContainer.add(headerShadow);

    header.setPosition(0, 0, 480, 80);
    header.setColor(touchgfx::Color::getColorFromRGB(17, 17, 27));
    headerContainer.add(header);

    add(headerContainer);
}

RotationTimeSettingsButtonsBase::~RotationTimeSettingsButtonsBase()
{

}

void RotationTimeSettingsButtonsBase::initialize()
{

}

void RotationTimeSettingsButtonsBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &speedButton)
    {
        //SpeedButtonPressed
        //When speedButton clicked emit speedButtonPressed callback
        //Emit callback
        emitSpeedButtonPressedCallback();
    }
    if (&src == &directionButton)
    {
        //DirectionButtonPressed
        //When directionButton clicked emit directionButtonPressed callback
        //Emit callback
        emitDirectionButtonPressedCallback();
    }
    if (&src == &rotationTimeButton)
    {
        //RotationTimeButtonPressed
        //When rotationTimeButton clicked emit rotationTimeButtonPressed callback
        //Emit callback
        emitRotationTimeButtonPressedCallback();
    }
}
