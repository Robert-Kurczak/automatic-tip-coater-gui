/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/HeaterStateSelectorBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HeaterStateSelectorBase::HeaterStateSelectorBase() :
    StateOnButtonPressedCallback(0),
    StateOffButtonPressedCallback(0),
    flexButtonCallback(this, &HeaterStateSelectorBase::flexButtonCallbackHandler)
{
    setWidth(480);
    setHeight(800);
    stateButtonContainer.setPosition(159, 400, 162, 165);
    stateButtonShadow.setPosition(0, 0, 162, 165);
    stateButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    stateButtonShadow.setAlpha(50);
    stateButtonContainer.add(stateButtonShadow);

    stateOnButton.setBoxWithBorderPosition(0, 0, 157, 160);
    stateOnButton.setBorderSize(0);
    stateOnButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    stateOnButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_RADIO_BUTTON_CHECKED_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_RADIO_BUTTON_CHECKED_60_60_E8F6FB_SVG_ID));
    stateOnButton.setIconXY(50, 20);
    stateOnButton.setText(TypedText(T___SINGLEUSE_VRO9));
    stateOnButton.setTextPosition(0, 100, 157, 160);
    stateOnButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    stateOnButton.setVisible(false);
    stateOnButton.setAction(flexButtonCallback);
    stateOnButton.setPosition(0, 0, 157, 160);
    stateButtonContainer.add(stateOnButton);

    stateOffButton.setBoxWithBorderPosition(0, 0, 157, 160);
    stateOffButton.setBorderSize(0);
    stateOffButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    stateOffButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_RADIO_BUTTON_UNCHECKED_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_RADIO_BUTTON_UNCHECKED_60_60_E8F6FB_SVG_ID));
    stateOffButton.setIconXY(50, 20);
    stateOffButton.setText(TypedText(T___SINGLEUSE_22RH));
    stateOffButton.setTextPosition(0, 100, 157, 160);
    stateOffButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    stateOffButton.setAction(flexButtonCallback);
    stateOffButton.setPosition(0, 0, 157, 160);
    stateButtonContainer.add(stateOffButton);

    add(stateButtonContainer);
}

HeaterStateSelectorBase::~HeaterStateSelectorBase()
{

}

void HeaterStateSelectorBase::initialize()
{

}

void HeaterStateSelectorBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &stateOnButton)
    {
        //StateOnButtonPressed
        //When stateOnButton clicked emit StateOnButtonPressed callback
        //Emit callback
        emitStateOnButtonPressedCallback();
        //HideStateOnButton
        //When stateOnButton clicked hide stateOnButton
        //Hide stateOnButton
        stateOnButton.setVisible(false);
        stateOnButton.invalidate();
        //ShowStateOffButton
        //When stateOnButton clicked show stateOffButton
        //Show stateOffButton
        stateOffButton.setVisible(true);
        stateOffButton.invalidate();
    }
    if (&src == &stateOffButton)
    {
        //StateOffButtonPressed
        //When stateOffButton clicked emit StateOffButtonPressed callback
        //Emit callback
        emitStateOffButtonPressedCallback();
        //HideStateOffButton
        //When stateOffButton clicked hide stateOffButton
        //Hide stateOffButton
        stateOffButton.setVisible(false);
        stateOffButton.invalidate();
        //ShowStateOnButton
        //When stateOffButton clicked show stateOnButton
        //Show stateOnButton
        stateOnButton.setVisible(true);
        stateOnButton.invalidate();
    }
}
