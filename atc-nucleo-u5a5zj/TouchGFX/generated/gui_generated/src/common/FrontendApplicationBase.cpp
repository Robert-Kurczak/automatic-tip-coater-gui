/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <gui/startscreen_screen/StartScreenView.hpp>
#include <gui/startscreen_screen/StartScreenPresenter.hpp>
#include <gui/calibratescreen_screen/CalibrateScreenView.hpp>
#include <gui/calibratescreen_screen/CalibrateScreenPresenter.hpp>
#include <gui/settingsscreen_screen/SettingsScreenView.hpp>
#include <gui/settingsscreen_screen/SettingsScreenPresenter.hpp>
#include <gui/xaxisstartscreen_screen/XAxisStartScreenView.hpp>
#include <gui/xaxisstartscreen_screen/XAxisStartScreenPresenter.hpp>
#include <gui/xaxisendscreen_screen/XAxisEndScreenView.hpp>
#include <gui/xaxisendscreen_screen/XAxisEndScreenPresenter.hpp>
#include <gui/xaxisspeedscreen_screen/XAxisSpeedScreenView.hpp>
#include <gui/xaxisspeedscreen_screen/XAxisSpeedScreenPresenter.hpp>
#include <gui/yaxisstartscreen_screen/YAxisStartScreenView.hpp>
#include <gui/yaxisstartscreen_screen/YAxisStartScreenPresenter.hpp>
#include <gui/yaxisendscreen_screen/YAxisEndScreenView.hpp>
#include <gui/yaxisendscreen_screen/YAxisEndScreenPresenter.hpp>
#include <gui/yaxisspeedscreen_screen/YAxisSpeedScreenView.hpp>
#include <gui/yaxisspeedscreen_screen/YAxisSpeedScreenPresenter.hpp>
#include <gui/zaxisstartscreen_screen/ZAxisStartScreenView.hpp>
#include <gui/zaxisstartscreen_screen/ZAxisStartScreenPresenter.hpp>
#include <gui/zaxisendscreen_screen/ZAxisEndScreenView.hpp>
#include <gui/zaxisendscreen_screen/ZAxisEndScreenPresenter.hpp>
#include <gui/zaxisspeedscreen_screen/ZAxisSpeedScreenView.hpp>
#include <gui/zaxisspeedscreen_screen/ZAxisSpeedScreenPresenter.hpp>
#include <gui/rotationspeedscreen_screen/RotationSpeedScreenView.hpp>
#include <gui/rotationspeedscreen_screen/RotationSpeedScreenPresenter.hpp>
#include <gui/rotationdirectionscreen_screen/RotationDirectionScreenView.hpp>
#include <gui/rotationdirectionscreen_screen/RotationDirectionScreenPresenter.hpp>
#include <gui/rotationtimescreen_screen/RotationTimeScreenView.hpp>
#include <gui/rotationtimescreen_screen/RotationTimeScreenPresenter.hpp>
#include <gui/heatertemperaturescreen_screen/HeaterTemperatureScreenView.hpp>
#include <gui/heatertemperaturescreen_screen/HeaterTemperatureScreenPresenter.hpp>
#include <gui/heaterstatescreen_screen/HeaterStateScreenView.hpp>
#include <gui/heaterstatescreen_screen/HeaterStateScreenPresenter.hpp>
#include <gui/testsscreen_screen/TestsScreenView.hpp>
#include <gui/testsscreen_screen/TestsScreenPresenter.hpp>
#include <gui/xaxistestsscreen_screen/XAxisTestsScreenView.hpp>
#include <gui/xaxistestsscreen_screen/XAxisTestsScreenPresenter.hpp>
#include <gui/yaxistestsscreen_screen/YAxisTestsScreenView.hpp>
#include <gui/yaxistestsscreen_screen/YAxisTestsScreenPresenter.hpp>
#include <gui/zaxistestsscreen_screen/ZAxisTestsScreenView.hpp>
#include <gui/zaxistestsscreen_screen/ZAxisTestsScreenPresenter.hpp>
#include <gui/rotationtestsscreen_screen/RotationTestsScreenView.hpp>
#include <gui/rotationtestsscreen_screen/RotationTestsScreenPresenter.hpp>
#include <gui/heatertestsscreen_screen/HeaterTestsScreenView.hpp>
#include <gui/heatertestsscreen_screen/HeaterTestsScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
}

/*
 * Screen Transition Declarations
 */

// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMainScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMainScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMainScreenScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMainScreenScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// CalibrateScreen

void FrontendApplicationBase::gotoCalibrateScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCalibrateScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCalibrateScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<CalibrateScreenView, CalibrateScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// SettingsScreen

void FrontendApplicationBase::gotoSettingsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSettingsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSettingsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<SettingsScreenView, SettingsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoSettingsScreenScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSettingsScreenScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSettingsScreenScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<SettingsScreenView, SettingsScreenPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// XAxisStartScreen

void FrontendApplicationBase::gotoXAxisStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoXAxisStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoXAxisStartScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<XAxisStartScreenView, XAxisStartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoXAxisStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoXAxisStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoXAxisStartScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<XAxisStartScreenView, XAxisStartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// XAxisEndScreen

void FrontendApplicationBase::gotoXAxisEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoXAxisEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoXAxisEndScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<XAxisEndScreenView, XAxisEndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// XAxisSpeedScreen

void FrontendApplicationBase::gotoXAxisSpeedScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoXAxisSpeedScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoXAxisSpeedScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<XAxisSpeedScreenView, XAxisSpeedScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// YAxisStartScreen

void FrontendApplicationBase::gotoYAxisStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoYAxisStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoYAxisStartScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<YAxisStartScreenView, YAxisStartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoYAxisStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoYAxisStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoYAxisStartScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<YAxisStartScreenView, YAxisStartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// YAxisEndScreen

void FrontendApplicationBase::gotoYAxisEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoYAxisEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoYAxisEndScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<YAxisEndScreenView, YAxisEndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// YAxisSpeedScreen

void FrontendApplicationBase::gotoYAxisSpeedScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoYAxisSpeedScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoYAxisSpeedScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<YAxisSpeedScreenView, YAxisSpeedScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ZAxisStartScreen

void FrontendApplicationBase::gotoZAxisStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoZAxisStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoZAxisStartScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<ZAxisStartScreenView, ZAxisStartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoZAxisStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoZAxisStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoZAxisStartScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ZAxisStartScreenView, ZAxisStartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ZAxisEndScreen

void FrontendApplicationBase::gotoZAxisEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoZAxisEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoZAxisEndScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ZAxisEndScreenView, ZAxisEndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ZAxisSpeedScreen

void FrontendApplicationBase::gotoZAxisSpeedScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoZAxisSpeedScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoZAxisSpeedScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ZAxisSpeedScreenView, ZAxisSpeedScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// RotationSpeedScreen

void FrontendApplicationBase::gotoRotationSpeedScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRotationSpeedScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoRotationSpeedScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<RotationSpeedScreenView, RotationSpeedScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoRotationSpeedScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRotationSpeedScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoRotationSpeedScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<RotationSpeedScreenView, RotationSpeedScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// RotationDirectionScreen

void FrontendApplicationBase::gotoRotationDirectionScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRotationDirectionScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoRotationDirectionScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<RotationDirectionScreenView, RotationDirectionScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// RotationTimeScreen

void FrontendApplicationBase::gotoRotationTimeScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRotationTimeScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoRotationTimeScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<RotationTimeScreenView, RotationTimeScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// HeaterTemperatureScreen

void FrontendApplicationBase::gotoHeaterTemperatureScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHeaterTemperatureScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHeaterTemperatureScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<HeaterTemperatureScreenView, HeaterTemperatureScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoHeaterTemperatureScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHeaterTemperatureScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHeaterTemperatureScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<HeaterTemperatureScreenView, HeaterTemperatureScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// HeaterStateScreen

void FrontendApplicationBase::gotoHeaterStateScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHeaterStateScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHeaterStateScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<HeaterStateScreenView, HeaterStateScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// TestsScreen

void FrontendApplicationBase::gotoTestsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTestsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTestsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<TestsScreenView, TestsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoTestsScreenScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTestsScreenScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTestsScreenScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<TestsScreenView, TestsScreenPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// XAxisTestsScreen

void FrontendApplicationBase::gotoXAxisTestsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoXAxisTestsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoXAxisTestsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<XAxisTestsScreenView, XAxisTestsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// YAxisTestsScreen

void FrontendApplicationBase::gotoYAxisTestsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoYAxisTestsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoYAxisTestsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<YAxisTestsScreenView, YAxisTestsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ZAxisTestsScreen

void FrontendApplicationBase::gotoZAxisTestsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoZAxisTestsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoZAxisTestsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<ZAxisTestsScreenView, ZAxisTestsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// RotationTestsScreen

void FrontendApplicationBase::gotoRotationTestsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRotationTestsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoRotationTestsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<RotationTestsScreenView, RotationTestsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// HeaterTestsScreen

void FrontendApplicationBase::gotoHeaterTestsScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHeaterTestsScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHeaterTestsScreenScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<HeaterTestsScreenView, HeaterTestsScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
