/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/SettingsFooterBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SettingsFooterBase::SettingsFooterBase() :
    saveButtonPressedCallback(0),
    flexButtonCallback(this, &SettingsFooterBase::flexButtonCallbackHandler),
    expandSaveButtonEndedCallback(this, &SettingsFooterBase::expandSaveButtonEndedCallbackHandler)
{
    setWidth(480);
    setHeight(125);
    saveButtonContainer.setPosition(243, 40, 238, 125);
    saveButtonShadow.setPosition(0, 0, 238, 5);
    saveButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    saveButtonShadow.setAlpha(50);
    saveButtonContainer.add(saveButtonShadow);

    saveButton.setBoxWithBorderPosition(0, 0, 238, 120);
    saveButton.setBorderSize(0);
    saveButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    saveButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_SAVE_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_SAVE_60_60_E8F6FB_SVG_ID));
    saveButton.setIconXY(90, 15);
    saveButton.setText(TypedText(T___SINGLEUSE_K3R6));
    saveButton.setTextPosition(0, 80, 238, 120);
    saveButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    saveButton.setAction(flexButtonCallback);
    saveButton.setPosition(0, 5, 238, 120);
    saveButtonContainer.add(saveButton);

    add(saveButtonContainer);

    backButtonContainer.setPosition(0, 40, 243, 85);
    backButtonShadow.setPosition(0, 0, 242, 85);
    backButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    backButtonShadow.setAlpha(50);
    backButtonContainer.add(backButtonShadow);

    backButton.setBoxWithBorderPosition(0, 0, 238, 80);
    backButton.setBorderSize(0);
    backButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    backButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_60_60_E8F6FB_SVG_ID));
    backButton.setIconXY(90, 10);
    backButton.setAction(flexButtonCallback);
    backButton.setPosition(0, 5, 238, 80);
    backButtonContainer.add(backButton);

    add(backButtonContainer);
}

SettingsFooterBase::~SettingsFooterBase()
{

}

void SettingsFooterBase::initialize()
{

}

void SettingsFooterBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &backButton)
    {
        //GoBackToSettings
        //When backButton clicked change screen to SettingsScreen
        //Go to SettingsScreen with screen transition towards West
        application().gotoSettingsScreenScreenWipeTransitionWest();
    }
    if (&src == &saveButton)
    {
        //ExpandSaveButton
        //When saveButton clicked move saveButtonContainer
        //Move saveButtonContainer to x:243, y:0 with ElasticOut easing in 1000 ms (60 Ticks)
        saveButtonContainer.clearMoveAnimationEndedAction();
        saveButtonContainer.startMoveAnimation(243, 0, 60, touchgfx::EasingEquations::elasticEaseOut, touchgfx::EasingEquations::elasticEaseOut);
        saveButtonContainer.setMoveAnimationEndedAction(expandSaveButtonEndedCallback);
        //SaveButtonPressed
        //When saveButton clicked emit saveButtonPressed callback
        //Emit callback
        emitSaveButtonPressedCallback();
    }
}

void SettingsFooterBase::expandSaveButtonEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{
    //RetractSaveButton
    //When ExpandSaveButton completed move saveButtonContainer
    //Move saveButtonContainer to x:243, y:40 with BackIn easing in 500 ms (30 Ticks)
    saveButtonContainer.clearMoveAnimationEndedAction();
    saveButtonContainer.startMoveAnimation(243, 40, 30, touchgfx::EasingEquations::backEaseIn, touchgfx::EasingEquations::backEaseIn);

}
