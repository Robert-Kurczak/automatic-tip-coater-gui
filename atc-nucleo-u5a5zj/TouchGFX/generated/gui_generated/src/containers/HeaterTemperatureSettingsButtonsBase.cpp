/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/HeaterTemperatureSettingsButtonsBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

HeaterTemperatureSettingsButtonsBase::HeaterTemperatureSettingsButtonsBase() :
    temperatureButtonPressedCallback(0),
    stateButtonPressedCallback(0),
    flexButtonCallback(this, &HeaterTemperatureSettingsButtonsBase::flexButtonCallbackHandler)
{
    setWidth(480);
    setHeight(245);
    buttons.setPosition(0, 80, 480, 165);
    stateButtonContainer.setPosition(243, 0, 238, 125);
    stateButtonShadow.setPosition(0, 120, 238, 5);
    stateButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    stateButtonShadow.setAlpha(50);
    stateButtonContainer.add(stateButtonShadow);

    stateButton.setBoxWithBorderPosition(0, 0, 238, 120);
    stateButton.setBorderSize(0);
    stateButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    stateButton.setText(TypedText(T___SINGLEUSE_KJZR));
    stateButton.setTextPosition(0, 45, 238, 120);
    stateButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    stateButton.setAction(flexButtonCallback);
    stateButton.setPosition(0, 0, 238, 120);
    stateButtonContainer.add(stateButton);

    stateButtonUnderline.setPosition(0, 115, 238, 5);
    stateButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(250, 179, 135));
    stateButtonContainer.add(stateButtonUnderline);

    buttons.add(stateButtonContainer);

    temperatureButtonContainer.setPosition(0, 0, 243, 165);
    temperatureButtonShadow.setPosition(0, 0, 243, 165);
    temperatureButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    temperatureButtonShadow.setAlpha(50);
    temperatureButtonContainer.add(temperatureButtonShadow);

    temperatureButton.setBoxWithBorderPosition(0, 0, 238, 160);
    temperatureButton.setBorderSize(0);
    temperatureButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    temperatureButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_DEVICE_THERMOSTAT_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_DEVICE_THERMOSTAT_60_60_E8F6FB_SVG_ID));
    temperatureButton.setIconXY(90, 20);
    temperatureButton.setText(TypedText(T___SINGLEUSE_4A2K));
    temperatureButton.setTextPosition(0, 100, 238, 160);
    temperatureButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    temperatureButton.setAction(flexButtonCallback);
    temperatureButton.setPosition(0, 0, 238, 160);
    temperatureButtonContainer.add(temperatureButton);

    temperatureButtonUnderline.setPosition(0, 155, 238, 5);
    temperatureButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(243, 139, 168));
    temperatureButtonContainer.add(temperatureButtonUnderline);

    buttons.add(temperatureButtonContainer);

    add(buttons);

    headerContainer.setPosition(0, 0, 480, 85);
    headerShadow.setPosition(0, 80, 480, 5);
    headerShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    headerShadow.setAlpha(50);
    headerContainer.add(headerShadow);

    header.setPosition(0, 0, 480, 80);
    header.setColor(touchgfx::Color::getColorFromRGB(17, 17, 27));
    headerContainer.add(header);

    add(headerContainer);
}

HeaterTemperatureSettingsButtonsBase::~HeaterTemperatureSettingsButtonsBase()
{

}

void HeaterTemperatureSettingsButtonsBase::initialize()
{

}

void HeaterTemperatureSettingsButtonsBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &temperatureButton)
    {
        //TemperatureButtonPressed
        //When temperatureButton clicked emit temperatureButtonPressed callback
        //Emit callback
        emitTemperatureButtonPressedCallback();
    }
    if (&src == &stateButton)
    {
        //StateButtonPressed
        //When stateButton clicked emit stateButtonPressed callback
        //Emit callback
        emitStateButtonPressedCallback();
    }
}
