/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/StartCancelFooterBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

StartCancelFooterBase::StartCancelFooterBase() :
    startButtonPressedCallback(0),
    cancelButtonPressedCallback(0),
    backButtonPressedCallback(0),
    flexButtonCallback(this, &StartCancelFooterBase::flexButtonCallbackHandler),
    hideStartAndBackButtonsEndedCallback(this, &StartCancelFooterBase::hideStartAndBackButtonsEndedCallbackHandler),
    hideCancelButtonEndedCallback(this, &StartCancelFooterBase::hideCancelButtonEndedCallbackHandler)
{
    setWidth(480);
    setHeight(120);
    cancelButtonContainer.setPosition(0, 120, 480, 85);
    cancelButtonShadow.setPosition(0, 0, 480, 5);
    cancelButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cancelButtonShadow.setAlpha(50);
    cancelButtonContainer.add(cancelButtonShadow);

    cancelButton.setBoxWithBorderPosition(0, 0, 480, 80);
    cancelButton.setBorderSize(0);
    cancelButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    cancelButton.setText(TypedText(T___SINGLEUSE_PZCT));
    cancelButton.setTextPosition(0, 22, 480, 80);
    cancelButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    cancelButton.setAction(flexButtonCallback);
    cancelButton.setPosition(0, 5, 480, 80);
    cancelButtonContainer.add(cancelButton);

    add(cancelButtonContainer);

    startAndBackButtonsContainer.setPosition(0, 35, 480, 85);
    backButtonContainer.setPosition(0, 0, 243, 85);
    backButtonShadow.setPosition(0, 0, 242, 85);
    backButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    backButtonShadow.setAlpha(50);
    backButtonContainer.add(backButtonShadow);

    backButton.setBoxWithBorderPosition(0, 0, 238, 80);
    backButton.setBorderSize(0);
    backButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    backButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_60_60_E8F6FB_SVG_ID));
    backButton.setIconXY(90, 10);
    backButton.setAction(flexButtonCallback);
    backButton.setPosition(0, 5, 238, 80);
    backButtonContainer.add(backButton);

    startAndBackButtonsContainer.add(backButtonContainer);

    startButtonContainer.setPosition(243, 0, 238, 85);
    startButtonShadow.setPosition(0, 0, 238, 5);
    startButtonShadow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    startButtonShadow.setAlpha(50);
    startButtonContainer.add(startButtonShadow);

    startButton.setBoxWithBorderPosition(0, 0, 238, 80);
    startButton.setBorderSize(0);
    startButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(17, 17, 27), touchgfx::Color::getColorFromRGB(24, 24, 37), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    startButton.setText(TypedText(T___SINGLEUSE_EMST));
    startButton.setTextPosition(0, 22, 238, 80);
    startButton.setTextColors(touchgfx::Color::getColorFromRGB(205, 214, 244), touchgfx::Color::getColorFromRGB(205, 214, 244));
    startButton.setAction(flexButtonCallback);
    startButton.setPosition(0, 5, 238, 80);
    startButtonContainer.add(startButton);

    startAndBackButtonsContainer.add(startButtonContainer);

    add(startAndBackButtonsContainer);
}

StartCancelFooterBase::~StartCancelFooterBase()
{

}

void StartCancelFooterBase::initialize()
{

}

void StartCancelFooterBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &startButton)
    {
        //StartButtonPressed
        //When startButton clicked emit startButtonPressed callback
        //Emit callback
        emitStartButtonPressedCallback();
        //HideStartAndBackButtons
        //When startButton clicked move startAndBackButtonsContainer
        //Move startAndBackButtonsContainer to x:-480, y:35 with BackIn easing in 500 ms (30 Ticks)
        startAndBackButtonsContainer.clearMoveAnimationEndedAction();
        startAndBackButtonsContainer.startMoveAnimation(-480, 35, 30, touchgfx::EasingEquations::backEaseIn, touchgfx::EasingEquations::backEaseIn);
        startAndBackButtonsContainer.setMoveAnimationEndedAction(hideStartAndBackButtonsEndedCallback);
    }
    if (&src == &cancelButton)
    {
        //CancelButtonPressed
        //When cancelButton clicked emit cancelButtonPressed callback
        //Emit callback
        emitCancelButtonPressedCallback();
        //ResetState
        //When cancelButton clicked call resetState on StartCancelFooter
        //Call resetState
        resetState();
    }
    if (&src == &backButton)
    {
        //BackButtonPressed
        //When backButton clicked emit backButtonPressed callback
        //Emit callback
        emitBackButtonPressedCallback();
    }
}

void StartCancelFooterBase::hideStartAndBackButtonsEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{
    //ShowCancelButton
    //When HideStartAndBackButtons completed move cancelButtonContainer
    //Move cancelButtonContainer to x:0, y:35 with ElasticOut easing in 1000 ms (60 Ticks)
    cancelButtonContainer.clearMoveAnimationEndedAction();
    cancelButtonContainer.startMoveAnimation(0, 35, 60, touchgfx::EasingEquations::elasticEaseOut, touchgfx::EasingEquations::elasticEaseOut);

}

void StartCancelFooterBase::resetState()
{
    //HideCancelButton
    //When resetState is called move cancelButtonContainer
    //Move cancelButtonContainer to x:0, y:120 with BackIn easing in 500 ms (30 Ticks)
    cancelButtonContainer.clearMoveAnimationEndedAction();
    cancelButtonContainer.startMoveAnimation(0, 120, 30, touchgfx::EasingEquations::backEaseIn, touchgfx::EasingEquations::backEaseIn);
    cancelButtonContainer.setMoveAnimationEndedAction(hideCancelButtonEndedCallback);
}

void StartCancelFooterBase::hideCancelButtonEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{
    //ShowStartAndBackButtons
    //When HideCancelButton completed move startAndBackButtonsContainer
    //Move startAndBackButtonsContainer to x:0, y:35 with ElasticOut easing in 1000 ms (60 Ticks)
    startAndBackButtonsContainer.clearMoveAnimationEndedAction();
    startAndBackButtonsContainer.startMoveAnimation(0, 35, 60, touchgfx::EasingEquations::elasticEaseOut, touchgfx::EasingEquations::elasticEaseOut);

}
