/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rotationdirectionscreen_screen/RotationDirectionScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

RotationDirectionScreenViewBase::RotationDirectionScreenViewBase() :
    rotationDirectionSettingsButtonsSpeedButtonPressedCallback(this, &RotationDirectionScreenViewBase::rotationDirectionSettingsButtonsSpeedButtonPressedCallbackHandler),
    rotationDirectionSettingsButtonsRotationTimeButtonPressedCallback(this, &RotationDirectionScreenViewBase::rotationDirectionSettingsButtonsRotationTimeButtonPressedCallbackHandler),
    rotationDirectionSelectorClockwiseButtonPressedCallback(this, &RotationDirectionScreenViewBase::rotationDirectionSelectorClockwiseButtonPressedCallbackHandler),
    settingsFooterSaveButtonPressedCallback(this, &RotationDirectionScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 480, 800);
    background.setColor(touchgfx::Color::getColorFromRGB(30, 30, 46));
    add(background);

    settingsFooter.setXY(0, 675);
    settingsFooter.setSaveButtonPressedCallback(settingsFooterSaveButtonPressedCallback);
    add(settingsFooter);

    rotationDirectionSelector.setXY(-3, 0);
    rotationDirectionSelector.setClockwiseButtonPressedCallback(rotationDirectionSelectorClockwiseButtonPressedCallback);
    add(rotationDirectionSelector);

    rotationDirectionSettingsButtons.setXY(0, 0);
    rotationDirectionSettingsButtons.setSpeedButtonPressedCallback(rotationDirectionSettingsButtonsSpeedButtonPressedCallback);
    rotationDirectionSettingsButtons.setRotationTimeButtonPressedCallback(rotationDirectionSettingsButtonsRotationTimeButtonPressedCallback);
    add(rotationDirectionSettingsButtons);

    directionButtonUnderline.setPosition(159, 555, 157, 5);
    directionButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(250, 179, 135));
    add(directionButtonUnderline);

    submenuName.setXY(188, 25);
    submenuName.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    submenuName.setLinespacing(0);
    submenuName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0FA2));
    add(submenuName);
}

RotationDirectionScreenViewBase::~RotationDirectionScreenViewBase()
{

}

void RotationDirectionScreenViewBase::setupScreen()
{
    settingsFooter.initialize();
    rotationDirectionSelector.initialize();
    rotationDirectionSettingsButtons.initialize();
}

void RotationDirectionScreenViewBase::rotationDirectionSettingsButtonsSpeedButtonPressedCallbackHandler()
{
    //GoToRotationSpeed
    //When rotationDirectionSettingsButtons speedButtonPressed change screen to RotationSpeedScreen
    //Go to RotationSpeedScreen with no screen transition
    application().gotoRotationSpeedScreenScreenNoTransition();
}

void RotationDirectionScreenViewBase::rotationDirectionSettingsButtonsRotationTimeButtonPressedCallbackHandler()
{
    //GoToRotationTime
    //When rotationDirectionSettingsButtons rotationTimeButtonPressed change screen to RotationTimeScreen
    //Go to RotationTimeScreen with no screen transition
    application().gotoRotationTimeScreenScreenNoTransition();
}

void RotationDirectionScreenViewBase::rotationDirectionSelectorClockwiseButtonPressedCallbackHandler()
{
    //ClockwiseButtonPressed
    //When rotationDirectionSelector ClockwiseButtonPressed call virtual function
    //Call clockwiseButtonPressed
    clockwiseButtonPressed();
    //CounterClockwiseButtonPressed
    //When rotationDirectionSelector ClockwiseButtonPressed call virtual function
    //Call counterClockwiseButtonPressed
    counterClockwiseButtonPressed();
}

void RotationDirectionScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler()
{
    //SaveButtonPressed
    //When settingsFooter saveButtonPressed call virtual function
    //Call saveButtonPressed
    saveButtonPressed();
}
