/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/xaxisstartscreen_screen/XAxisStartScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

XAxisStartScreenViewBase::XAxisStartScreenViewBase() :
    axisStartSelectorIncreaseButtonPressedCallback(this, &XAxisStartScreenViewBase::axisStartSelectorIncreaseButtonPressedCallbackHandler),
    axisStartSelectorDecreaseButtonPressedCallback(this, &XAxisStartScreenViewBase::axisStartSelectorDecreaseButtonPressedCallbackHandler),
    settingsFooterSaveButtonPressedCallback(this, &XAxisStartScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler),
    axisStartSettingsButtonsEndButtonPressedCallback(this, &XAxisStartScreenViewBase::axisStartSettingsButtonsEndButtonPressedCallbackHandler),
    axisStartSettingsButtonsSpeedButtonPressedCallback(this, &XAxisStartScreenViewBase::axisStartSettingsButtonsSpeedButtonPressedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 480, 800);
    background.setColor(touchgfx::Color::getColorFromRGB(30, 30, 46));
    add(background);

    settingsFooter.setXY(0, 675);
    settingsFooter.setSaveButtonPressedCallback(settingsFooterSaveButtonPressedCallback);
    add(settingsFooter);

    axisStartSelector.setXY(0, 0);
    axisStartSelector.setIncreaseButtonPressedCallback(axisStartSelectorIncreaseButtonPressedCallback);
    axisStartSelector.setDecreaseButtonPressedCallback(axisStartSelectorDecreaseButtonPressedCallback);
    add(axisStartSelector);

    axisStartSettingsButtons.setXY(0, 0);
    axisStartSettingsButtons.setEndButtonPressedCallback(axisStartSettingsButtonsEndButtonPressedCallback);
    axisStartSettingsButtons.setSpeedButtonPressedCallback(axisStartSettingsButtonsSpeedButtonPressedCallback);
    add(axisStartSettingsButtons);

    displayedValueUnderline.setPosition(55, 435, 370, 5);
    displayedValueUnderline.setColor(touchgfx::Color::getColorFromRGB(243, 139, 168));
    add(displayedValueUnderline);

    units.setPosition(240, 363, 173, 35);
    units.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    units.setLinespacing(1);
    units.setTypedText(touchgfx::TypedText(T___SINGLEUSE_US5M));
    add(units);

    submenuName.setXY(201, 25);
    submenuName.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    submenuName.setLinespacing(0);
    submenuName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DUHZ));
    add(submenuName);
}

XAxisStartScreenViewBase::~XAxisStartScreenViewBase()
{

}

void XAxisStartScreenViewBase::setupScreen()
{
    settingsFooter.initialize();
    axisStartSelector.initialize();
    axisStartSettingsButtons.initialize();
}

void XAxisStartScreenViewBase::axisStartSelectorIncreaseButtonPressedCallbackHandler()
{
    //IncreaseButtonPressed
    //When axisStartSelector increaseButtonPressed call virtual function
    //Call increaseButtonPressed
    increaseButtonPressed();
}

void XAxisStartScreenViewBase::axisStartSelectorDecreaseButtonPressedCallbackHandler()
{
    //DecreaseButtonPressed
    //When axisStartSelector decreaseButtonPressed call virtual function
    //Call decreaseButtonPressed
    decreaseButtonPressed();
}

void XAxisStartScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler()
{
    //SaveButtonPressed
    //When settingsFooter saveButtonPressed call virtual function
    //Call saveButtonPressed
    saveButtonPressed();
}

void XAxisStartScreenViewBase::axisStartSettingsButtonsEndButtonPressedCallbackHandler()
{
    //GoToXAxisEnd
    //When axisStartSettingsButtons endButtonPressed change screen to XAxisEndScreen
    //Go to XAxisEndScreen with no screen transition
    application().gotoXAxisEndScreenScreenNoTransition();
}

void XAxisStartScreenViewBase::axisStartSettingsButtonsSpeedButtonPressedCallbackHandler()
{
    //GoToXAxisSpeed
    //When axisStartSettingsButtons speedButtonPressed change screen to XAxisSpeedScreen
    //Go to XAxisSpeedScreen with no screen transition
    application().gotoXAxisSpeedScreenScreenNoTransition();
}
