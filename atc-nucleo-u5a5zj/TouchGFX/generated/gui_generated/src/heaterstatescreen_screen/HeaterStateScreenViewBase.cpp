/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/heaterstatescreen_screen/HeaterStateScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HeaterStateScreenViewBase::HeaterStateScreenViewBase() :
    heaterStateSelectorStateOffButtonPressedCallback(this, &HeaterStateScreenViewBase::heaterStateSelectorStateOffButtonPressedCallbackHandler),
    heaterStateSelectorStateOnButtonPressedCallback(this, &HeaterStateScreenViewBase::heaterStateSelectorStateOnButtonPressedCallbackHandler),
    settingsFooterSaveButtonPressedCallback(this, &HeaterStateScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler),
    heaterStateSettingsButtonsTemperatureButtonPressedCallback(this, &HeaterStateScreenViewBase::heaterStateSettingsButtonsTemperatureButtonPressedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 480, 800);
    background.setColor(touchgfx::Color::getColorFromRGB(30, 30, 46));
    add(background);

    settingsFooter.setXY(0, 675);
    settingsFooter.setSaveButtonPressedCallback(settingsFooterSaveButtonPressedCallback);
    add(settingsFooter);

    heaterStateSettingsButtons.setXY(0, 0);
    heaterStateSettingsButtons.setTemperatureButtonPressedCallback(heaterStateSettingsButtonsTemperatureButtonPressedCallback);
    add(heaterStateSettingsButtons);

    heaterStateSelector.setXY(0, 0);
    heaterStateSelector.setStateOffButtonPressedCallback(heaterStateSelectorStateOffButtonPressedCallback);
    heaterStateSelector.setStateOnButtonPressedCallback(heaterStateSelectorStateOnButtonPressedCallback);
    add(heaterStateSelector);

    stateButtonUnderline.setPosition(159, 555, 157, 5);
    stateButtonUnderline.setColor(touchgfx::Color::getColorFromRGB(250, 179, 135));
    add(stateButtonUnderline);

    submenuName.setXY(198, 25);
    submenuName.setColor(touchgfx::Color::getColorFromRGB(205, 214, 244));
    submenuName.setLinespacing(0);
    submenuName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IUBX));
    add(submenuName);
}

HeaterStateScreenViewBase::~HeaterStateScreenViewBase()
{

}

void HeaterStateScreenViewBase::setupScreen()
{
    settingsFooter.initialize();
    heaterStateSettingsButtons.initialize();
    heaterStateSelector.initialize();
}

void HeaterStateScreenViewBase::heaterStateSelectorStateOffButtonPressedCallbackHandler()
{
    //StateOffButtonPressed
    //When heaterStateSelector StateOffButtonPressed call virtual function
    //Call stateOffButtonPressed
    stateOffButtonPressed();
}

void HeaterStateScreenViewBase::heaterStateSelectorStateOnButtonPressedCallbackHandler()
{
    //StateOnButtonPressed
    //When heaterStateSelector StateOnButtonPressed call virtual function
    //Call stateOnButtonPressed
    stateOnButtonPressed();
}

void HeaterStateScreenViewBase::settingsFooterSaveButtonPressedCallbackHandler()
{
    //SaveButtonPressed
    //When settingsFooter saveButtonPressed call virtual function
    //Call saveButtonPressed
    saveButtonPressed();
}

void HeaterStateScreenViewBase::heaterStateSettingsButtonsTemperatureButtonPressedCallbackHandler()
{
    //GoToHeaterTemperature
    //When heaterStateSettingsButtons temperatureButtonPressed change screen to HeaterTemperatureScreen
    //Go to HeaterTemperatureScreen with no screen transition
    application().gotoHeaterTemperatureScreenScreenNoTransition();
}
