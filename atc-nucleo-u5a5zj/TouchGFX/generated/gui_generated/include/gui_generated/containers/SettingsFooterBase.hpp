/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGSFOOTERBASE_HPP
#define SETTINGSFOOTERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class SettingsFooterBase : public touchgfx::Container
{
public:
    SettingsFooterBase();
    virtual ~SettingsFooterBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setSaveButtonPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->saveButtonPressedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitSaveButtonPressedCallback()
    {
        if (saveButtonPressedCallback && saveButtonPressedCallback->isValid())
        {
            this->saveButtonPressedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::MoveAnimator< touchgfx::Container > saveButtonContainer;
    touchgfx::Box saveButtonShadow;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  saveButton;
    touchgfx::Container backButtonContainer;
    touchgfx::Box backButtonShadow;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  backButton;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* saveButtonPressedCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SettingsFooterBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback < SettingsFooterBase, const touchgfx::MoveAnimator<touchgfx::Container>& > expandSaveButtonEndedCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void expandSaveButtonEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);

};

#endif // SETTINGSFOOTERBASE_HPP
