/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TESTSSCREENVIEWBASE_HPP
#define TESTSSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/testsscreen_screen/TestsScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class TestsScreenViewBase : public touchgfx::View<TestsScreenPresenter>
{
public:
    TestsScreenViewBase();
    virtual ~TestsScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::Container footerContainer;
    touchgfx::Box footerShadow;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  backButton;
    touchgfx::Container buttons;
    touchgfx::Container heaterButtonContainer;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  heaterButton;
    touchgfx::Box heaterButtonUnderline;
    touchgfx::Container rotationButtonContainer;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  rotationButton;
    touchgfx::Box rotationButtonUnderline;
    touchgfx::Container zAxisButtonContainer;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  zAxisButton;
    touchgfx::Box zAxisUnderline;
    touchgfx::Container yAxisButtonContainer;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  yAxisButton;
    touchgfx::Box yAxisUnderline;
    touchgfx::Container xAxisButtonContainer;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  xAxisButton;
    touchgfx::Box xAxisUnderline;
    touchgfx::Container headerContainer;
    touchgfx::Box headerShadow;
    touchgfx::Box header;
    touchgfx::TextArea submenuName;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TestsScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // TESTSSCREENVIEWBASE_HPP
