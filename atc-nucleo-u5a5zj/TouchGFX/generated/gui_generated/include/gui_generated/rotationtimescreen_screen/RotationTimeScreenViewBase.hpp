/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ROTATIONTIMESCREENVIEWBASE_HPP
#define ROTATIONTIMESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/rotationtimescreen_screen/RotationTimeScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/SettingsFooter.hpp>
#include <gui/containers/ValueSelector.hpp>
#include <gui/containers/RotationTimeSettingsButtons.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class RotationTimeScreenViewBase : public touchgfx::View<RotationTimeScreenPresenter>
{
public:
    RotationTimeScreenViewBase();
    virtual ~RotationTimeScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increaseButtonPressed()
    {
        // Override and implement this function in RotationTimeScreen
    }
    virtual void decreaseButtonPressed()
    {
        // Override and implement this function in RotationTimeScreen
    }
    virtual void saveButtonPressed()
    {
        // Override and implement this function in RotationTimeScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    SettingsFooter settingsFooter;
    ValueSelector timeSelector;
    touchgfx::Box displayedValueUnderline;
    RotationTimeSettingsButtons rotationTimeSettingsButtons;
    touchgfx::TextArea units;
    touchgfx::TextArea submenuName;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RotationTimeScreenViewBase> timeSelectorIncreaseButtonPressedCallback;
    touchgfx::Callback<RotationTimeScreenViewBase> timeSelectorDecreaseButtonPressedCallback;
    touchgfx::Callback<RotationTimeScreenViewBase> settingsFooterSaveButtonPressedCallback;
    touchgfx::Callback<RotationTimeScreenViewBase> rotationTimeSettingsButtonsSpeedButtonPressedCallback;
    touchgfx::Callback<RotationTimeScreenViewBase> rotationTimeSettingsButtonsDirectionButtonPressedCallback;

    /*
     * Callback Handler Declarations
     */
    void timeSelectorIncreaseButtonPressedCallbackHandler();
    void timeSelectorDecreaseButtonPressedCallbackHandler();
    void settingsFooterSaveButtonPressedCallbackHandler();
    void rotationTimeSettingsButtonsSpeedButtonPressedCallbackHandler();
    void rotationTimeSettingsButtonsDirectionButtonPressedCallbackHandler();

};

#endif // ROTATIONTIMESCREENVIEWBASE_HPP
